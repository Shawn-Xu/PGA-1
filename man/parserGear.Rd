% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbsearch.R
\name{parserGear}
\alias{parserGear}
\title{Post-processing for the identification result}
\usage{
parserGear(file = NULL, db = NULL, outdir = "parser_outdir",
  prefix = "pga", fdr = 0.01, novelPrefix = "VAR",
  decoyPrefix = "###REV###", alignment = 1, xmx = NULL, thread = 1,
  msfile = NULL, verbose = 1)
}
\arguments{
\item{file}{MS/MS search file. Currently, only XML format file
of X!Tandem, DAT result of Mascot and mzIdentML result file (MS-GF+,
MyriMatch, IPeak, OMSSA, ...) are supported.}

\item{db}{A FASTA format database file used for MS/MS searching.
Usually, it is from the output of the function \code{dbCreator}.}

\item{outdir}{Output directory.}

\item{prefix}{The prefix of output file.}

\item{fdr}{FDR for peptide identification. Default is 0.01 at PSM level.}

\item{novelPrefix}{The prefix of novel protein ID. Default is "VAR".
"VAR" is the prefix which used by function \code{dbCreator}. This value
should be left to the default when your database is constructed by
the function \code{getTrinityDB}.}

\item{decoyPrefix}{The prefix of decoy sequences ID. Default is "###REV###".
"###REV###" is the prefix which used by function \code{dbCreator}.}

\item{alignment}{0 or 1 to determine if peptide should be alignment or not.
Default is 1.}

\item{xmx}{The maximum Java heap size. The unit is "G".}

\item{thread}{This parameter is used to specify the number of threads.
"0" represents that all of the available threads are used;
"1" represents one thread is used;
"2" represents two threads are used,and so on. Default is 1.}

\item{msfile}{The MS/MS data (mgf format) used.}
}
\value{
none
}
\description{
This function is mainly for q-value calculation,
protein inference and novel peptides spectra annotation.
}
\examples{
vcffile <- system.file("extdata/input", "PGA.vcf",package="PGA")
bedfile <- system.file("extdata/input", "junctions.bed",package="PGA")
gtffile <- system.file("extdata/input", "transcripts.gtf",package="PGA")
annotation <- system.file("extdata", "annotation",package="PGA")
outfile_path<-"db/"
outfile_name<-"test"
library(BSgenome.Hsapiens.UCSC.hg19)
dbfile <- dbCreator(gtfFile=gtffile,vcfFile=vcffile,bedFile=bedfile,
                    annotation_path=annotation,outfile_name=outfile_name,
                    genome=Hsapiens,outdir=outfile_path)

msfile <- system.file("extdata/input", "pga.mgf",package="PGA")

## X!Tandem as the peptide identification software
idfile <- runTandem(spectra = msfile, fasta = dbfile, outdir = "./", cpu = 6,
                    enzyme = "[KR]|[X]", varmod = "15.994915@M",itol = 0.05,
                    fixmod = "57.021464@C", tol = 10, tolu = "ppm",
                    itolu = "Daltons", miss = 2, maxCharge = 8, ti = FALSE)
parserGear(file = idfile, db = dbfile, decoyPrefix="#REV#",xmx=1,thread=8,
           outdir = "parser_outdir")

## Mascot as the peptide identification software
dat_file <- system.file("extdata/input", "mascot.dat",package="PGA")
parserGear(file = dat_file, db = dbfile, decoyPrefix="#REV#",xmx=1,thread=8,
           outdir = "parser_outdir_mascot")
}
